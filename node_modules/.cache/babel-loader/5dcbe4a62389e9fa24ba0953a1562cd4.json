{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilya4\\\\Desktop\\\\Redux\\\\project_2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'sending...',\n        message: 'sending cart data!'\n      }));\n      const response = await fetch('https://redux-store-56771-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('sending cart data failed');\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success!',\n        message: 'sent cart data successfully!'\n      }));\n    };\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'error!',\n        message: 'something went wrong!'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ilya4/Desktop/Redux/project_2/src/App.js"],"names":["Cart","Layout","Products","useSelector","useDispatch","useEffect","uiActions","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA5B;AACA,QAAMC,IAAI,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAxB;AACA,QAAMC,YAAY,GAAGb,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASG,YAAnB,CAAhC;AAEAX,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMY,YAAY,GAAG,YAAY;AAC/BP,MAAAA,QAAQ,CACNJ,SAAS,CAACY,gBAAV,CAA2B;AAC3BC,QAAAA,MAAM,EAAC,SADoB;AAE3BC,QAAAA,KAAK,EAAE,YAFoB;AAG3BC,QAAAA,OAAO,EAAE;AAHkB,OAA3B,CADM,CAAR;AAQA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,EAC1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAFR,OAD0B,CAA5B;;AAME,UAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAW,0BAAX,CAAN;AACD;;AAEHnB,MAAAA,QAAQ,CACNJ,SAAS,CAACY,gBAAV,CAA2B;AAC3BC,QAAAA,MAAM,EAAE,SADmB;AAE3BC,QAAAA,KAAK,EAAE,UAFoB;AAG3BC,QAAAA,OAAO,EAAE;AAHkB,OAA3B,CADM,CAAR;AAOD,KA1BD;;AA4BAJ,IAAAA,YAAY,GAAGa,KAAf,CAAqBC,KAAK,IAAI;AAC5BrB,MAAAA,QAAQ,CACNJ,SAAS,CAACY,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KARD;AASD,GAtCQ,EAsCN,CAACN,IAAD,EAAOL,QAAP,CAtCM,CAAT;AAyCA,sBACE;AAAA,eACCM,YAAY,iBACb,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACG,MADvB;AAEE,MAAA,KAAK,EAAEH,YAAY,CAACI,KAFtB;AAGE,MAAA,OAAO,EAAEJ,YAAY,CAACK;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFA,eAOA,QAAC,MAAD;AAAA,iBACGV,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADF;AAcD;;GA7DQF,G;UACUL,W,EACAD,W,EACJA,W,EACQA,W;;;KAJdM,G;AA+DT,eAAeA,GAAf","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true; \n\nfunction App() {\n  const dispatch = useDispatch()\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  useEffect(()=>{\n    const sendCartData = async () => {\n      dispatch(\n        uiActions.showNotification({\n        status:'pending',\n        title: 'sending...',\n        message: 'sending cart data!'\n        })\n      );\n      \n      const response = await fetch('https://redux-store-56771-default-rtdb.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify(cart)\n        });\n\n        if (!response.ok) {\n          throw new Error ('sending cart data failed');\n        }\n\n      dispatch(\n        uiActions.showNotification({\n        status: 'success',\n        title: 'success!',\n        message: 'sent cart data successfully!'\n        })\n      )\n    }\n\n    sendCartData().catch(error => {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'error!',\n          message: 'something went wrong!'\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n\n  return (\n    <>\n    {notification && \n    <Notification \n      status={notification.status} \n      title={notification.title} \n      message={notification.message}\n    />}\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}