{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\n\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const response = await fetch('https://redux-store-56771-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n\n    if (!response.ok) {\n      throw new Error('Sending cart data failed');\n    }\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/ilya4/Desktop/Redux/project_2/src/store/cart-slice.js"],"names":["createSlice","uiActions","initialState","items","totalQuantity","totalAmount","cartSlice","name","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,aAAa,EAAE,CAA5B;AAA+BC,EAAAA,WAAW,EAAE;AAA5C,CAArB;AAEA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAE,MADoB;AAE1BL,EAAAA,YAAY,EAAEA,YAFY;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;AACAP,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAI,CAACU,YAAL,EAAmB;AACfJ,QAAAA,KAAK,CAACP,KAAN,CAAYe,IAAZ,CAAiB;AACbD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADC;AAEbE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFF;AAGbC,UAAAA,QAAQ,EAAE,CAHG;AAIbC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJP;AAKbZ,UAAAA,IAAI,EAAEK,OAAO,CAACU;AALD,SAAjB;AAOH,OARD,MAQO;AACHR,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;AACH;AACJ,KAjBK;;AAkBNI,IAAAA,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAC9B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAP,MAAAA,KAAK,CAACN,aAAN;;AACA,UAAIU,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;AAC7BV,QAAAA,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYqB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;AACH;AACJ;;AA5BK;AAHgB,CAAD,CAA7B;;AAmCA,MAAMM,YAAY,GAAIC,IAAD,IAAU;AAC3B,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CACJ1B,SAAS,CAAC2B,gBAAV,CAA2B;AACvBC,MAAAA,MAAM,EAAE,SADe;AAEvBP,MAAAA,KAAK,EAAE,YAFgB;AAGvBQ,MAAAA,OAAO,EAAE;AAHc,KAA3B,CADI,CAAR;AAQA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,EACxB;AACIC,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAFV,KADwB,CAA5B;;AAMA,QAAI,CAACK,QAAQ,CAACM,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;AACJ,GAlBD;AAmBH,CApBD;;AAsBA,OAAO,MAAMC,WAAW,GAAGjC,SAAS,CAACkC,OAA9B;AAEP,eAAelC,SAAS,CAACmC,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst initialState = { items: [], totalQuantity: 0, totalAmount: 0 };\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialState,\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id, \r\n                    price: newItem.price, \r\n                    quantity: 1, \r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'pending',\r\n                title: 'Sending...',\r\n                message: 'Sending cart data!'\r\n            })\r\n        );\r\n\r\n        const response = await fetch('https://redux-store-56771-default-rtdb.firebaseio.com/cart.json',\r\n            {\r\n                method: 'PUT',\r\n                body: JSON.stringify(cart)\r\n            });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Sending cart data failed');\r\n        }\r\n    };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}